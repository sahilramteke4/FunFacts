{"version":3,"sources":["NumberFacts/NumberFactsCategories.js","NumberFacts/NumberFactsInputs.js","NumberFacts/NumberFactsDisplayText.js","NumberFacts/SubmitButton.js","NumberFacts/RandomButton.js","Containers/NumberFacts.js","IssLocation/ButtonIss.js","IssLocation/Location.js","Containers/IssLocation.js","PokeDex/InputField.js","PokeDex/PokemonDetails.js","Containers/PokeDex.js","ChuckNorris/Categories.js","ChuckNorris/ChuckNorrisButtons.js","ChuckNorris/DisplayText.js","Containers/ChuckNorris.js","App.js","serviceWorker.js","index.js"],"names":["NumberFactsCategories","changeCategory","className","defaultValue","onChange","value","NumberFactsInputs","state","inputChange","categoryValue","number","type","placeholder","readOnly","date","style","opacity","year","DisplayText","text","rows","column","SubmitButton","buttonClick","width","onClick","RandomButton","randomClick","NumberFacts","onChangeCategory","event","setState","target","onInputChange","fetchData","input","url","fetch","then","response","data","displayText","catch","onButtonClick","console","log","randomButtonClick","categoryArray","categoryArrayIndex","randomNumberGenerator","num","month","x","ran","Math","floor","random","this","listStyle","display","Component","ButtonIss","Location","color","height","IssLocation","json","latitude","iss_position","longitude","locationData","results","formatted","err","React","InputField","fetchPokemon","allpokemon","selectContainer","document","getElementById","forEach","pokemon","optionElement","createElement","innerText","name","classList","add","appendChild","id","props","handleSelect","pokemonTypeString","PokemonDetails","pokemonType","imgsrc","src","alt","PokeDex","temp","fetchPokemonDetails","pokeData","pokeTypes","pokeName","pokeId","imageUrl","createTypes","types","typesArray","push","Categories","fetchCategories","firstRun","categories","catList","category","optElement","required","getCategory","handleRandomButton","handleSubmit","displayContent","ChuckNorris","alert","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.191272bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './numberFacts.css';\r\n\r\nconst NumberFactsCategories = ({ changeCategory }) => {\r\n\r\n\treturn (\r\n       <div>\r\n         <select className='br3 bg-lightest-blue ph3 pv1 measure-wide' \r\n         defaultValue=\"trivia\" \r\n         onChange={ changeCategory } >\r\n \t\t \t  <option value=\"trivia\">trivia</option>\r\n  \t\t\t<option value=\"math\">math</option>\r\n  \t\t\t<option value=\"date\">date</option>\r\n  \t\t\t<option value=\"year\">year</option>\r\n         </select>\r\n       </div>\r\n\t\t);\r\n}\r\n\r\nexport default NumberFactsCategories;","import React  from 'react';\r\nimport './NumberFactsInputs.css';\r\nimport 'tachyons';\r\n\r\nconst NumberFactsInputs = ({ state, inputChange }) => {\r\n\r\n    if(state.categoryValue === 'trivia' || state.categoryValue === 'math') {\r\n\treturn(\r\n            <div>\r\n            <ul >\r\n              <li> <input  className='br3 dib pa1 ma2 bg-lightest-blue bn' value={state.number} type='number' placeholder='Number'  onChange={inputChange} /></li>\r\n              <li> <input readOnly className='br3 dib pa1 ma2 bg-lightest-blue bn' value={state.date} type='number' placeholder='MM/DD' style={{opacity: 0.4}} onChange={inputChange} /></li>\r\n              <li> <input readOnly className='br3 dib pa1 ma2 bg-lightest-blue bn' value={state.year} type='number' placeholder='YYYY' style={{opacity: 0.4}} onChange={inputChange} /></li>\r\n            </ul>\r\n            </div>\r\n\t\t);\r\n   }\r\n\r\n\telse if(state.categoryValue === 'date') {\r\n\t return(\r\n            <div>\r\n            <ul >\r\n              <li> <input readOnly className='br3 dib pa1 ma2 bg-lightest-blue bn' value={state.number} type='number' placeholder='Number' style={{opacity: 0.4}} onChange={inputChange} /></li>\r\n              <li> <input className='br3 dib pa1 ma2 bg-lightest-blue bn' value={state.date} type='text' placeholder='MM/DD' onChange={inputChange} /></li>\r\n              <li> <input readOnly className='br3 dib pa1 ma2 bg-lightest-blue bn' value={state.year} type='number' placeholder='YYYY' style={{opacity: 0.4}} onChange={inputChange} /></li>\r\n            </ul>\r\n            </div>\r\n\t\t);\r\n\t}\r\n\r\n  else if(state.categoryValue === 'year') {\r\n   return(\r\n            <div>\r\n            <ul  onChange={inputChange}>\r\n              <li> <input readOnly className='br3 dib pa1 ma2 bg-lightest-blue bn' value={state.number} type='number' placeholder='Number' style={{opacity: 0.4}} onChange={inputChange} /></li>\r\n              <li> <input readOnly className='br3 dib pa1 ma2 bg-lightest-blue bn' value={state.date} type='number' placeholder='MM/DD' style={{opacity: 0.4}} onChange={inputChange} /></li>\r\n              <li> <input  className='br3 dib pa1 ma2 bg-lightest-blue bn' type='number' value={state.year} placeholder='YYYY' onChange={inputChange} /></li>\r\n            </ul>\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberFactsInputs;","import React from 'react';\r\nimport './NumberFactsDisplayText.css'\r\nimport 'tachyons';\r\n\r\nconst DisplayText = ({ text }) => {\r\n\r\n\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div\r\n\t\t\t\trows='4' column='50' \r\n\t\t\t\tclassName='tc roll display'>\r\n\t\t\t\t{text}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default DisplayText;","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst SubmitButton = ({buttonClick}) => {\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<button className='white b pv2 ph3 mt3 bg-blue bn br2 grow'\r\n\t\t\tstyle={{width: 95}}\r\n\t\t\tonClick={ buttonClick } >\r\n\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst RandomButton = ({randomClick}) => {\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<button className='white b pv2 ph3 mt3 bg-blue bn br2 grow'\r\n\t\t\tonClick={ randomClick } >\r\n\t\t\tRandom\r\n\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\nexport default RandomButton;","import React , { Component } from 'react';\nimport NuberFactsCategories from '../NumberFacts/NumberFactsCategories';\nimport NumberFactsInputs from '../NumberFacts/NumberFactsInputs';\nimport DisplayText from '../NumberFacts/NumberFactsDisplayText';\nimport SubmitButton from '../NumberFacts/SubmitButton';\nimport RandomButton from '../NumberFacts/RandomButton';\nimport '../NumberFacts/numberFacts.css';\nimport 'tachyons';\n\nclass NumberFacts extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcategoryValue : 'trivia',\n\t\t\tnumber : '',\n            date : '',\n            year : '',\n            displayText : 'Result will appear here!'\n\t\t}\n\t}\n\nonChangeCategory = (event) => {\n this.setState({categoryValue : event.target.value,\n \t\t\t\t\t   number : '',\n            \t\t   date : '',\n            \t\t   year : ''}) ;\n}\n\nonInputChange = (event) => {\n\tif(this.state.categoryValue === 'math' || this.state.categoryValue === 'trivia')\n\t\tthis.setState({number: event.target.value});\n\n\telse if(this.state.categoryValue === 'date' )\n\t\t this.setState({date: event.target.value});\n\n\telse if(this.state.categoryValue === 'year' )\n\t\t this.setState({year: event.target.value});\n}\n\nfetchData = (input) => {\n\t    let url = '';\n\n\t    if(this.state.categoryValue === 'trivia') {\n\t    \turl = `http://numbersapi.com/${input}`;\n\t    } else {\n\t    \turl = `http://numbersapi.com/${input}/${this.state.categoryValue}`;\n\t    }\n\n\t\tfetch(url)\n\t\t.then(response => response.text())\n\t\t.then(data => this.setState({displayText: data}))\n\t\t.catch( () => { this.setState({displayText: 'Ooops! we got an Error.'})} ); \n}\n\n onButtonClick = (event) => {\n\n\t \tswitch(this.state.categoryValue) {\n\t \t\tcase 'trivia' : this.fetchData(this.state.number);\n\t \t\t\t\t\t\t\tbreak;\n\n\t \t\tcase 'math' : this.fetchData(this.state.number);\n\t \t\t\t\t\t\t\tbreak;\n\n\t \t\tcase 'date' : this.fetchData(this.state.date);\n\t \t\t\t\t\t\t \tbreak;\n\n\t \t\tcase 'year' : this.fetchData(this.state.year);\n\t \t\t\t\t\t\t\tbreak;\t\n\n\t \t\tdefault : console.log('default case');\n\t \t}\n\n\t \tthis.setState({\n\t \t\t\t\t   number : '',\n            \t\t   date : '',\n            \t\t   year : ''});\n }\n\n randomButtonClick = (event) => {\n \t\t\tlet categoryArray = ['trivia', 'math', 'date', 'year'];\n \t\t\tlet categoryArrayIndex = this.randomNumberGenerator(4) - 1 ;\n \t\t\tconsole.log('catArrVal', categoryArray[categoryArrayIndex])\n \t\t\tif( categoryArray[categoryArrayIndex] === 'trivia' || categoryArray[categoryArrayIndex] === 'math') {\n \t\t\t\tthis.setState({ categoryValue: categoryArray[categoryArrayIndex] });\n\t \t\t\tlet num = this.randomNumberGenerator(100000);\n\t \t\t\tthis.fetchData(num);\n \t\t\t}\n\n \t\t\telse if(categoryArray[categoryArrayIndex] === 'date') {\n\n \t\t\t\tthis.setState({ categoryValue: categoryArray[categoryArrayIndex] });\n \t\t\t\tlet month = this.randomNumberGenerator(12);\n \t\t\t\tlet day=0;\n\t \t\t\t\tif(month === 2)\n\t \t\t\t\tday = this.randomNumberGenerator(28);\n\t \t\t\t\telse\n\t \t\t\t\tday = this.randomNumberGenerator(30);\n\n\t \t\t\tlet date = month + '/' + day ;\n\n\t \t\t\tthis.fetchData(date);\n \t\t\t}\n\n \t\t\telse if(categoryArray[categoryArrayIndex] === 'year') {\n \t\t\t\tthis.setState({ categoryValue: categoryArray[categoryArrayIndex] });\n \t\t\t\tlet year = this.randomNumberGenerator(2020);\n \t\t\t\tconsole.log('year : ', year);\n \t\t\t\tthis.fetchData(year);\n \t\t\t}\n }\n\n randomNumberGenerator = (x) => {\n \t\t\tlet ran = Math.floor( (Math.random() * x) + 1 ); \n \t\t\tconsole.log('generator :',ran);\n \t\t\treturn(ran);\n }\n\n\trender() {\n\t\treturn(\n\t\t<div \n\t\tclassName='tc bg-light-blue dib br3 pa3 ma3 bw2 shadow-5 container'\n\t\t>\n\t        <h1>Number Facts</h1>\n\t        <NuberFactsCategories  changeCategory = {this.onChangeCategory} />\n\t        <NumberFactsInputs state={this.state} inputChange={this.onInputChange} />\n\t        <DisplayText text={this.state.displayText}/>\n\t        <ul style={{listStyle: 'none'}} >\n\t\t        <li style={{ display: 'inline-block' }}> <SubmitButton buttonClick={this.onButtonClick} /> </li>\n\t\t        <li  className='ml3' style={{ display: 'inline-block' }}> <RandomButton randomClick={this.randomButtonClick} /> </li>\n\t        </ul>\n        </div>\n        );\n\t\t}\n\n}\n\nexport default NumberFacts;","import React from 'react';\n\nconst ButtonIss = ({onButtonClick}) => {\n\treturn(\n\t\t\t<div>\n\t\t\t\t<button className='white b pv2 ph3 mt2 bg-dark-green bn br2 grow'\n\t\t\t\tstyle={{width: '7em'}}\n\t\t\t\tonClick = {onButtonClick}\n\t\t\t\t>\n\t\t\t\tFind now\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n}\n\nexport default ButtonIss;","import React from 'react';\n\nconst Location = ({displayText}) => {\n\treturn (\n\t\t\t<div style={{color: '#7a73ff'}}>\n\t\t\t\t\t<h3 \n\t\t\t\t\tstyle={{width: '23.5em', height: '2em'}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{displayText}\n\t\t\t\t\t</h3>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Location;","import React from 'react';\nimport ButtonIss from '../IssLocation/ButtonIss';\nimport Location from '../IssLocation/Location';\nimport '../IssLocation/issLocation.css';\n\nclass IssLocation  extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tlatitude : '',\n\t\t\tlongitude : '',\n\t\t\tdisplayText : 'Let\\'s find out where\\'s the International space station...'\n\t\t}\n\t}\n\nonButtonClick = (event) => {\n\tfetch('http://api.open-notify.org/iss-now.json')\n\t.then(response => response.json())\n\t.then(data => {\n\t\tthis.setState({\n\t\t\tlatitude : data.iss_position.latitude,\n\t\t\tlongitude : data.iss_position.longitude\n\t\t});\n\n\t\tfetch(`https://api.opencagedata.com/geocode/v1/json?q=${this.state.latitude}+${this.state.longitude}&key=b310e0c7b70049a5978eb4bb73a53334`)\n\t\t.then(response => response.json())\n\t\t.then(locationData => {\n\t\t\tthis.setState({\n\t\t\t\tdisplayText : locationData.results[0].formatted\n\t\t\t});\n\t\t\tconsole.log(this.state.displayText);\n\t\t})\n\t\t.catch(err => console.log('Unable to convert co-ordinates into address'));\n\t})\n\t.catch(err => console.log('Unable to fetch location'));\n}\n\n\trender() {\n\t\treturn (\n\t\t\t<div \n\t\t\tclassName='tc bg-light-green br3 ma3 bw2 shadow-5 container'\n\t\t\t>\n\t\t\t\t<h1>International space station is above</h1>\n\t\t\t\t<Location displayText={this.state.displayText} />\n\t\t\t\t<ButtonIss  onButtonClick={this.onButtonClick} />\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport  default IssLocation;","import React from 'react';\r\nimport './pokeDex.css';\r\n\r\nclass InputField extends React.Component  {\r\n\r\nfetchPokemon = () => {\r\n\t  fetch(\"https://pokeapi.co/api/v2/pokemon?limit=1000\")\r\n\t  .then(response => response.json())\r\n\t  .then(allpokemon => {\r\n\t  \tconst selectContainer = document.getElementById('pokeNames');\r\n\t  \tallpokemon.results.forEach(pokemon => {\r\n\t  \t\tconst optionElement = document.createElement('option');\r\n\t  \t\toptionElement.innerText=pokemon.name;\r\n\t  \t\toptionElement.classList.add('pokeOption');\r\n\t  \t\tselectContainer.appendChild(optionElement);\r\n\t  \t});\r\n\t})\r\n}\r\n\t\r\nrender() {\r\n\treturn(\r\n\t\t <div className='set'>\r\n\t         <select className='br3 bg-lightest-blue ph3 pv1 measure-wide' \r\n\t         id='pokeNames'\r\n\t         defaultValue=\"pikachu\" \r\n\t         className='dropDown PokeRoll'\r\n\t         size='19'\r\n\t         onChange={this.props.handleSelect}\r\n\t         >\r\n\t         </select>\r\n\t     {this.fetchPokemon()}\r\n        </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\nimport './pokeDex.css';\r\n\r\nlet pokemonTypeString = 'Pokemon type';\r\n\r\nconst PokemonDetails = ({name, id, pokemonType, imgsrc}) => {\r\n\r\n\tpokemonType.forEach(type => {\r\n\t\tpokemonTypeString += '*' + type + ' ';\r\n\t});\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<ul className='pos detailList'>\r\n\t\t\t\t<li className='detailList'><img src={imgsrc} alt=\"Pokemon\" className='pokeImg' /></li>\r\n\t\t\t\t<li className='detailList'><h1>#{id}</h1></li>\r\n\t\t\t\t<li className='detailList'><h2>{name}</h2></li>\r\n\t\t\t\t<li className='detailList'><h3>Pokemon type : </h3></li> \r\n\t\t\t\t<li className='detailList'><h4>{pokemonTypeString}</h4></li>\r\n\t\t\t</ul>\r\n\t\t\t{pokemonTypeString =''}\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default PokemonDetails;","import React from 'react';\nimport InputField from '../PokeDex/InputField'\nimport '../PokeDex/pokeDex.css';\nimport PokemonDetails from '../PokeDex/PokemonDetails';\n\nclass PokeDex extends React.Component {\n\nconstructor() {\n\tsuper();\n\tthis.state = {\n\t\tname: 'Pokemon name',\n\t\tid: '0',\n\t\tpokemonType: [],\n\t\timgsrc: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ220kFoqIeX2hHzN0GNgNTF2kDg38Hd74yXA&usqp=CAU'\n\t}\n}\n\n//https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ220kFoqIeX2hHzN0GNgNTF2kDg38Hd74yXA&usqp=CAU\n//https://pokeapi.co/api/v2/pokemon?limit=1000\n//https://pokeres.bastionbot.org/images/pokemon/${pokeId}.png\nhandleSelect = (event) => {\n\tlet temp = event.target.value;\n\tfetch(\"https://pokeapi.co/api/v2/pokemon?limit=1000\")\n\t  .then(response => response.json())\n\t  .then(allpokemon => {\n\t  \tallpokemon.results.forEach(pokemon => {\n\t  \t\tif(pokemon.name === temp) {\n\t  \t\t\tfetch(pokemon.url)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tthis.fetchPokemonDetails(data);\n\t\t\t\t})\n\t  \t\t}\n\t  \t});\n\t})\n}\n\nfetchPokemonDetails = pokeData => {\n\tlet pokeName = pokeData.name;\n\tlet pokeId = pokeData.id;\n\tlet pokeTypes = [];\n\tlet imageUrl = `https://pokeres.bastionbot.org/images/pokemon/${pokeId}.png`;\n\tpokeTypes = this.createTypes(pokeData.types);\n\tthis.setState({name: pokeName, id: pokeId, pokemonType: pokeTypes, imgsrc: imageUrl});\n}\n\ncreateTypes = (types) => {\n\tlet typesArray = [];\n\ttypes.forEach(type => {\n\t\ttypesArray.push(type.type.name);\n\t});\n\treturn typesArray;\n}\n\n\trender() {\n\t\tconst {name, id, pokemonType, imgsrc} = this.state;\n\t\treturn (\n\t\t\t<div className='tc bg-dark-blue dib br3 pa3 ma3 bw2 shadow-5 pokeContainer'>\n\t\t\t\t<h1 className='pokefont'>PokeDex </h1> \n\t\t\t\t<InputField handleSelect={this.handleSelect} />\n\t\t\t\t<PokemonDetails name={name} id={id} pokemonType={pokemonType} imgsrc={imgsrc} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PokeDex;","import React from 'react';\nimport '../ChuckNorris/chucknorris.css';\n\nclass Categories extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfirstRun: 0\n\t\t}\n\t}\n\nfetchCategories = () => {\n\tif(this.state.firstRun === 0) {\n\t\tthis.state.firstRun = 1;\n\t\tfetch('https://api.chucknorris.io/jokes/categories')\n\t\t.then(response => response.json())\n\t\t.then(categories => {\n\t\t\tconst catList = document.getElementById('cat');\n\t\t\tcategories.forEach(category => {\n\t\t\t\tlet optElement = document.createElement('option');\n\t\t\t\toptElement.innerText = category;\n\t\t\t\tcatList.appendChild(optElement);\n\t\t\t});\n\t\t})\n\t}\n}\t\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<select \n\t\t\t\tid='cat' \n\t\t\t\trequired\n\t\t\t\tclassName='selectCategory'\n\t\t\t\tonChange = {this.props.getCategory}\n\t\t\t\t>\n\t\t\t\t\t<option value=''>Category</option>\n\t\t\t\t</select>\n\t\t\t{this.fetchCategories()}\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\nexport default Categories;","import React from 'react';\nimport '../ChuckNorris/chucknorris.css';\n\nconst SubmitButton = ({handleSubmit}) => {\n\treturn(\n\t\t<div>\n\t\t\t<button\n\t\t\tclassName='norrisButton'\n\t\t\tonClick={handleSubmit}\n\t\t\t>\n\t\t\tSUBMIT\n\t\t\t</button>\n\t\t</div>\n\t\t);\n}\n\nconst RandomButton = ({handleRandomButton}) => {\n\treturn(\n\t\t<div>\n\t\t\t<button\n\t\t\tclassName='norrisButton'\n\t\t\tonClick={handleRandomButton}\n\t\t\t>\n\t\t\tRANDOM\n\t\t\t</button>\n\t\t</div>\n\t\t);\n}\n\nexport default SubmitButton;\nexport { RandomButton };","import React from 'react';\nimport '../ChuckNorris/chucknorris.css';\n\nconst DisplayText = ({ displayContent }) => {\n\n\treturn(\n\t\t\t<div>\n\t\t\t\t<div\n\t\t\t\trows='8' column='40' \n\t\t\t\tclassName='tc rollNorris'>\n\t\t\t\t\t{displayContent}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n}\n\nexport default DisplayText;","import React from 'react'\nimport Categories from '../ChuckNorris/Categories';\nimport SubmitButton, {RandomButton} from '../ChuckNorris/ChuckNorrisButtons';\nimport DisplayText from '../ChuckNorris/DisplayText';\nimport '../ChuckNorris/chucknorris.css';\n\nclass ChuckNorris extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcategory: '',\n\t\t\tdisplayContent: 'Joke will appear here.'\n\t\t}\n\t}\n\ngetCategory = (event) => {\n\tthis.setState({category: event.target.value});\n}\n\nhandleSubmit = (event) => {\n\tif(this.state.category !== '') {\n\t\tconst url = `https://api.chucknorris.io/jokes/random?category=${this.state.category}`;\n\t\tfetch(url)\n\t\t.then(response => response.json())\n\t\t.then(data => this.setState({displayContent: data.value}))\n\t\t.catch(err => console.log('Unable to fetch joke ay this moment.'));\n\t} else {\n\t\talert('Please select a category first.');\n\t}\n}\n\nhandleRandomButton = () => {\n\tconst url = `https://api.chucknorris.io/jokes/random`;\n\tfetch(url)\n\t.then(response => response.json())\n\t.then(data =>  this.setState({displayContent: data.value}))\n\t.catch(err => console.log('Unable to fetch joke ay this moment.'));\n}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className='tc bg-orange br3 ma3 bw2 shadow-5 container'>\n\t\t\t\t<h1 className='chuckNorrisFont'>Chuck Norris</h1>\n\t\t\t\t<div className='innerComponents'>\n\t\t\t\t\t<Categories getCategory={this.getCategory} />\n\t\t\t\t\t<SubmitButton handleSubmit={this.handleSubmit} />\n\t\t\t\t\t<RandomButton handleRandomButton={this.handleRandomButton} />\n\t\t\t\t</div>\n\t\t\t\t<DisplayText displayContent={this.state.displayContent}/>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default ChuckNorris;","import React from 'react';\nimport NumberFacts from './Containers/NumberFacts';\nimport IssLocation from './Containers/IssLocation';\nimport PokeDex from './Containers/PokeDex';\nimport ChuckNorris from './Containers/ChuckNorris';\nimport './App.css';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<div className='showcase'>\n\t\t\t\t<NumberFacts />\n\t\t\t\t<IssLocation />\n\t\t\t\t<PokeDex />\n\t\t\t\t<ChuckNorris />\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\t\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}